"""
Django settings for mi_ia_backend project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# Clave secreta (debe configurarse como variable de entorno en producción)
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'reemplazar_con_una_clave_segura')

# Modo de depuración (False en producción)
DEBUG = True

# Hosts permitidos (debe configurarse en producción)
ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOSTS', 'localhost,127.0.0.1').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

 # Librerías externas
    'rest_framework', # Si estás usando Django REST Framework 
    'rest_framework.authtoken',  # Si usas autenticación basada en tokens
    'rest_framework_simplejwt',  # Para la autenticación con JWT
    'corsheaders',  # Para permitir acceso de otros dominios a tu API

    # Aplicaciones del proyecto
    'users.apps.UsersConfig',  # App de usuarios
    'api',  # Tu app de la IA
    'interacciones',
    # otros apps
    'sslserver',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # Agregado para permitir CORS
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mi_ia_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mi_ia_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

# Configuración regional
LANGUAGE_CODE = 'es-mx'  # Cambiado a español de México
TIME_ZONE = 'America/Mexico_City'
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
import os
from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent

# Modo de depuración (debe definirse en variables de entorno para producción)
DEBUG = os.getenv('DJANGO_DEBUG', 'False') == 'True'


# Directorio donde se almacenarán los archivos estáticos al correr collectstatic
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Si tienes otras carpetas con archivos estáticos durante el desarrollo, puedes especificarlas aquí
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'mi_carpeta_estatica'),
]

# El URL a través del cual se servirán los archivos estáticos
STATIC_URL = '/static/'

# Configuración de archivos multimedia
MEDIA_URL = '/media/'
MEDIA_ROOT = os.getenv('DJANGO_MEDIA_ROOT', os.path.join(BASE_DIR, 'media'))

# Configuración de almacenamiento de archivos estáticos en producción
if not DEBUG:
    STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'

# Configuración de seguridad
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_SSL_REDIRECT = False  # Solo redirige HTTPS en producción
CSRF_COOKIE_SECURE = not DEBUG  # Solo permite cookies CSRF en HTTPS en producción
SESSION_COOKIE_SECURE = not DEBUG  # Solo permite cookies de sesión en HTTPS en producción
X_FRAME_OPTIONS = 'DENY'  # Evita que tu sitio se cargue en un iframe

# Tipo de clave primaria por defecto
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Tipo de clave primaria por defecto
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# Definir la carpeta donde se recopilarán los archivos estáticos
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Para producción, especificar STATIC_ROOT
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

import os

# Configuración CORS
CORS_ALLOWED_ORIGINS = os.getenv('DJANGO_CORS_ALLOWED_ORIGINS', 'http://localhost:5001,http://127.0.0.1:5001').split(',')
CORS_ALLOW_CREDENTIALS = True  # Permite el uso de cookies o sesiones en solicitudes CORS

# Configuración de logs
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/errors.log'),
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'] if os.getenv('DJANGO_DEBUG', 'False') == 'True' else ['file'],
            'level': 'DEBUG' if os.getenv('DJANGO_DEBUG', 'False') == 'True' else 'ERROR',
            'propagate': True,
        },
    },
}

# Modelo de usuario personalizado
AUTH_USER_MODEL = 'users.CustomUser'

# Configuración de Django REST Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'api.authentication.CustomJWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

# Redirecciones después de login/logout
LOGIN_REDIRECT_URL = os.getenv('DJANGO_LOGIN_REDIRECT_URL', '/')
LOGOUT_REDIRECT_URL = os.getenv('DJANGO_LOGOUT_REDIRECT_URL', '/')

from datetime import timedelta

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=24),  # Aumenta de minutos a horas o días
    "REFRESH_TOKEN_LIFETIME": timedelta(days=30),  # Esto también puedes ajustarlo
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": True,
}
